# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core


trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: "Debug"
  testProject: "test/simpleapi.test"

steps:

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'MySonarCloud'
    organization: 'vcloud'
    scannerMode: 'MSBuild'
    projectKey: 'VProject'
    projectName: 'vproject'
    extraProperties: 'sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/coverage/coverage.opencover.xml'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- script: dotnet test --logger trx --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=$(Build.SourcesDirectory)/coverage/$(testProject)
  displayName: 'dotnet test'

- task: reportgenerator@4
  inputs:
    reports: 'test/simpleapi.test/coverage.opencover.xml'
    targetdir: 'coverage/Cobertura'
    reporttypes: 'Cobertura;HTMLInline;HTMLChart'
  displayName: 'Generating Coverage Reports'


- task: SonarCloudAnalyze@1
  displayName: 'Run Code Analysis'

- task: SonarCloudPublish@1
  displayName: 'Publish Quality Gate Results'


- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'


- task: PublishCodeCoverageResults@1
  inputs:
    summaryFileLocation: $(Build.SourcesDirectory)/coverage/Cobertura/Cobertura.xml
    reportDirectory: $(Build.SourcesDirectory)/coverage/Cobertura
    codecoverageTool: cobertura

- task: DotNetCoreCLI@2
  displayName: 'Creating Artifacts and making package'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'src/simpleapi/simpleapi.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Pubish Artifacts'


